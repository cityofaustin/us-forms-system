{"version":3,"sources":["../../../../src/js/widgets/CalendarDateWidget/dateHelpers.js"],"names":["parseISODate","formatISOPartialDate","formatYear","formatDayMonth","dateString","split","year","month","day","undefined","val","Number","dayOrMonth","toString","length"],"mappings":";;;;;;;;QACgBA,Y,GAAAA,Y;QAgBAC,oB,GAAAA,oB;QAQAC,U,GAAAA,U;QAIAC,c,GAAAA,c;AA7BhB;AACO,SAASH,YAAT,CAAsBI,UAAtB,EAAkC;AACvC,MAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAAA,4BACPA,WAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CADO;AAAA;AAAA,QAC3BC,IAD2B;AAAA,QACrBC,KADqB;AAAA,QACdC,GADc;;AAElC,WAAO;AACLD,kBADK;AAELC,cAFK;AAGLF;AAHK,KAAP;AAKD;AACD,SAAO;AACLC,WAAO,EADF;AAELC,SAAK,EAFA;AAGLF,UAAM;AAHD,GAAP;AAKD;;AAEM,SAASL,oBAAT,OAAoD;AAAA,MAApBM,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,GAAa,QAAbA,GAAa;AAAA,MAARF,IAAQ,QAARA,IAAQ;;AACzD,MAAIC,SAASC,GAAT,IAAgBF,IAApB,EAA0B;AACxB,WAAUJ,WAAWI,IAAX,CAAV,SAA8BH,eAAeI,KAAf,CAA9B,SAAuDJ,eAAeK,GAAf,CAAvD;AACD;;AAED,SAAOC,SAAP;AACD;;AAEM,SAASP,UAAT,CAAoBQ,GAApB,EAAyB;AAC9B,SAAOA,GAAP;AACD;;AAEM,SAASP,cAAT,CAAwBO,GAAxB,EAA6B;AAClC,MAAIA,QAAQ,EAAZ,EAAgB,OAAO,EAAP;AAChBA,QAAMC,OAAOD,GAAP,CAAN;AACA,MAAIA,GAAJ,EAAS;AACP,QAAME,aAAaF,IAAIG,QAAJ,EAAnB;AACA,QAAIF,OAAOC,UAAP,KAAsBA,WAAWE,MAAX,KAAsB,CAAhD,EAAmD;AACjD,mBAAWJ,GAAX;AACD,KAFD,MAEO,IAAIC,OAAOC,UAAP,CAAJ,EAAwB;AAC7B,aAAOA,UAAP;AACD;AACF;AACD,SAAO,EAAP;AACD","file":"dateHelpers.js","sourcesContent":["// dateString will be either a string in the form \"2011-11-11\" or undefined\nexport function parseISODate(dateString) {\n  if (typeof dateString === 'string') {\n    const [year, month, day] = dateString.split('-', 3);\n    return {\n      month,\n      day,\n      year\n    }\n  }\n  return {\n    month: '',\n    day: '',\n    year: '',\n  }\n}\n\nexport function formatISOPartialDate({ month, day, year }) {\n  if (month && day && year) {\n    return `${formatYear(year)}-${formatDayMonth(month)}-${formatDayMonth(day)}`;\n  }\n\n  return undefined;\n}\n\nexport function formatYear(val) {\n  return val;\n}\n\nexport function formatDayMonth(val) {\n  if (val === \"\") return \"\";\n  val = Number(val);\n  if (val) {\n    const dayOrMonth = val.toString();\n    if (Number(dayOrMonth) && dayOrMonth.length === 1) {\n      return `0${val}`;\n    } else if (Number(dayOrMonth)) {\n      return dayOrMonth;\n    }\n  }\n  return '';\n}\n"]}
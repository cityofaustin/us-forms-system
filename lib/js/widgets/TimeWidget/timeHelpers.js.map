{"version":3,"sources":["../../../../src/js/widgets/TimeWidget/timeHelpers.js"],"names":["parseTime","formatHourMinute","formatTime","timeString","split","hour","minute","period","val","numberVal","Number","hourOrMinute","toString","isNaN","length","undefined"],"mappings":";;;;;;;;QACgBA,S,GAAAA,S;QAkBAC,gB,GAAAA,gB;QAcAC,U,GAAAA,U;AAjChB;AACO,SAASF,SAAT,CAAmBG,UAAnB,EAA+B;AACpC,MAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC;AADkC,4BAGHA,WAAWC,KAAX,CAAiB,OAAjB,CAHG;AAAA;AAAA,QAG3BC,IAH2B;AAAA,QAGrBC,MAHqB;AAAA,QAGbC,MAHa;;AAIlC,WAAO;AACLF,gBADK;AAELC,oBAFK;AAGLC;AAHK,KAAP;AAKD;AACD,SAAO;AACLF,UAAM,EADD;AAELC,YAAQ,EAFH;AAGLC,YAAQ;AAHH,GAAP;AAKD;;AAEM,SAASN,gBAAT,CAA0BO,GAA1B,EAA+B;AACpC,MAAIA,QAAQ,EAAZ,EAAgB,OAAO,EAAP;AAChB,MAAMC,YAAYC,OAAOF,GAAP,CAAlB;AACA,MAAIC,aAAcA,cAAc,CAAhC,EAAoC;AAClC,QAAME,eAAeH,IAAII,QAAJ,EAArB;AACA,QAAI,CAACC,MAAMF,YAAN,CAAD,IAAwBA,aAAaG,MAAb,KAAwB,CAApD,EAAuD;AACrD,mBAAWL,SAAX;AACD,KAFD,MAEO,IAAI,CAACI,MAAMF,YAAN,CAAL,EAA0B;AAC/B,aAAOA,YAAP;AACD;AACF;AACD,SAAO,EAAP;AACD;;AAEM,SAAST,UAAT,OAA8C;AAAA,MAAxBG,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AACnD,MAAIF,QAAQC,OAAOQ,MAAf,IAAyBP,MAA7B,EAAqC;AACnC,WAAUN,iBAAiBI,IAAjB,CAAV,SAAoCJ,iBAAiBK,MAAjB,CAApC,SAAgEC,MAAhE;AACD;;AAED,SAAOQ,SAAP;AACD","file":"timeHelpers.js","sourcesContent":["// timeString will be either a string in the form \"12:30 AM\" or undefined\nexport function parseTime(timeString) {\n  if (typeof timeString === 'string') {\n    // TODO: verify that this is truly 'useless'\n    // eslint-disable-next-line no-useless-escape\n    const [hour, minute, period] = timeString.split(/\\:|\\s/);\n    return {\n      hour,\n      minute,\n      period\n    };\n  }\n  return {\n    hour: '',\n    minute: '',\n    period: 'am',\n  };\n}\n\nexport function formatHourMinute(val) {\n  if (val === '') return '';\n  const numberVal = Number(val);\n  if (numberVal || (numberVal === 0)) {\n    const hourOrMinute = val.toString();\n    if (!isNaN(hourOrMinute) && hourOrMinute.length === 1) {\n      return `0${numberVal}`;\n    } else if (!isNaN(hourOrMinute)) {\n      return hourOrMinute;\n    }\n  }\n  return '';\n}\n\nexport function formatTime({ hour, minute, period }) {\n  if (hour && minute.length && period) {\n    return `${formatHourMinute(hour)}:${formatHourMinute(minute)} ${period}`;\n  }\n\n  return undefined;\n}\n"]}
{"version":3,"sources":["../../src/js/routing.js"],"names":["getNextPagePath","getPreviousPagePath","getEligiblePages","pageList","data","pathname","eligiblePageList","pageIndex","item","path","pages","page"],"mappings":";;;;;;;;;;QAagBA,e,GAAAA,e;QAKAC,mB,GAAAA,mB;;AAjBhB;;;;AAEA;;;;AAIA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,IAApC,EAA0CC,QAA1C,EAAoD;AAClD,MAAMC,mBAAmB,qCAAuBH,QAAvB,EAAiCC,IAAjC,CAAzB;AACA,MAAMG,YAAY,yBAAY;AAAA,WAAQC,KAAKC,IAAL,KAAcJ,QAAtB;AAAA,GAAZ,EAA4CC,gBAA5C,CAAlB;AACA,SAAO,EAAEI,OAAOJ,gBAAT,EAA2BC,oBAA3B,EAAP;AACD;;AAEM,SAASP,eAAT,CAAyBG,QAAzB,EAAmCC,IAAnC,EAAyCC,QAAzC,EAAmD;AAAA,0BAC3BH,iBAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,QAAjC,CAD2B;AAAA,MAChDK,KADgD,qBAChDA,KADgD;AAAA,MACzCH,SADyC,qBACzCA,SADyC;;AAExD,SAAOG,MAAMH,YAAY,CAAlB,EAAqBE,IAA5B;AACD;;AAEM,SAASR,mBAAT,CAA6BE,QAA7B,EAAuCC,IAAvC,EAA6CC,QAA7C,EAAuD;AAAA,2BAC/BH,iBAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,QAAjC,CAD+B;AAAA,MACpDK,KADoD,sBACpDA,KADoD;AAAA,MAC7CH,SAD6C,sBAC7CA,SAD6C;AAE5D;AACA;;;AACA,MAAMI,OAAOJ,aAAa,CAAb,GAAiBA,YAAY,CAA7B,GAAiC,CAA9C;AACA,SAAOG,MAAMC,IAAN,EAAYF,IAAnB;AACD","file":"routing.js","sourcesContent":["import _ from 'lodash/fp';\nimport { getActiveExpandedPages } from './helpers';\n\n/*\n * Returns the page list without conditional pages that have not satisfied\n * their dependencies and therefore should be skipped.\n */\nfunction getEligiblePages(pageList, data, pathname) {\n  const eligiblePageList = getActiveExpandedPages(pageList, data);\n  const pageIndex = _.findIndex(item => item.path === pathname, eligiblePageList);\n  return { pages: eligiblePageList, pageIndex };\n}\n\nexport function getNextPagePath(pageList, data, pathname) {\n  const { pages, pageIndex } = getEligiblePages(pageList, data, pathname);\n  return pages[pageIndex + 1].path;\n}\n\nexport function getPreviousPagePath(pageList, data, pathname) {\n  const { pages, pageIndex } = getEligiblePages(pageList, data, pathname);\n  // if we found the current page, go to previous one\n  // if not, go back to the beginning because they shouldnâ€™t be here\n  const page = pageIndex >= 0 ? pageIndex - 1 : 0;\n  return pages[page].path;\n}\n"]}